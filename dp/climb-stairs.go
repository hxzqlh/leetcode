package dp

// 假设你正在爬楼梯。需要 n 阶你才能到达楼顶。
//
// 每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？
//
// 注意：给定 n 是一个正整数。
//
// 示例 1：
// 输入： 2 输出： 2
// 解释： 有两种方法可以爬到楼顶。
// 1 阶 + 1 阶
// 2 阶
//
// 示例 2： 输入： 3
// 解释： 有三种方法可以爬到楼顶。
// 1 阶 + 1 阶 + 1 阶
// 1 阶 + 2 阶
// 2 阶 + 1 阶

// 1: dp[i]
// 2: dp[i] = dp[i-2] + dp[i-1]
// 3: dp[1]=1, dp[2]=2
// 4: i=3,4,5...n

// 1,2,3,5,8,13...
func ClimbStairs(n int) int {
	var sum int
	a, b := 0, 1
	for i := 1; i <= n; i++ {
		sum = a + b
		a = b
		b = sum
	}
	return sum
}
